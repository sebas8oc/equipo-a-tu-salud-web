---
export interface Props {
	title: string;
	description?: string;
}

const { title, description = "Servicios de salud para mejorar tu calidad de vida" } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description} />
		<meta name="keywords" content="cuidadores Bogotá, auxiliar enfermería, servicios médicos domicilio, cuidados post-operatorios, enfermería domiciliaria" />
		<title>{title}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Open+Sans:wght@400;500;600&display=swap" rel="stylesheet">
		<meta name="theme-color" content="#2B6CB0">
		<link rel="manifest" href="/manifest.json">
	</head>
	<body>
		<div class="page-transition">
			<slot />
		</div>
		<div class="loading-bar"></div>
	</body>
</html>

<style is:global>
	:root {
		/* Nueva paleta de colores más profesional y moderna */
		--primary: #2B6CB0;
		--primary-dark: #1E4E8C;
		--primary-light: #EBF8FF;
		--secondary: #38A169;
		--secondary-dark: #2F855A;
		--accent: #ED8936;
		--accent-dark: #DD6B20;
		--success: #38A169;
		--warning: #DD6B20;
		--error: #E53E3E;
		
		/* Colores neutrales mejorados */
		--neutral-50: #F7FAFC;
		--neutral-100: #EDF2F7;
		--neutral-200: #E2E8F0;
		--neutral-300: #CBD5E0;
		--neutral-400: #A0AEC0;
		--neutral-500: #718096;
		--neutral-600: #4A5568;
		--neutral-700: #2D3748;
		--neutral-800: #1A202C;
		--neutral-900: #171923;

		/* Espaciado consistente */
		--spacing-xs: 0.25rem;
		--spacing-sm: 0.5rem;
		--spacing-md: 1rem;
		--spacing-lg: 1.5rem;
		--spacing-xl: 2rem;
		--spacing-2xl: 3rem;
		--spacing-3xl: 4rem;

		/* Sombras */
		--shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
		--shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
		--shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
	}

	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
	}

	html {
		scroll-behavior: smooth;
		font-size: 16px;
	}

	body {
		font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
		line-height: 1.7;
		color: var(--neutral-700);
		background-color: var(--neutral-50);
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		overflow-x: hidden;
	}

	/* View Transitions */
	::view-transition-old(root),
	::view-transition-new(root) {
		animation: none;
		mix-blend-mode: normal;
	}

	::view-transition-old(root) {
		z-index: 1;
	}

	::view-transition-new(root) {
		z-index: 2;
	}

	.page-transition {
		view-transition-name: page;
	}

	.loading-bar {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		height: 3px;
		background: var(--primary);
		transform-origin: 0%;
		transform: scaleX(0);
		transition: transform 0.3s ease;
		z-index: 1000;
	}

	.loading-bar.loading {
		transform: scaleX(1);
		animation: loading 1s ease-in-out infinite;
	}

	@keyframes loading {
		0% { transform: scaleX(0); }
		50% { transform: scaleX(0.5); }
		100% { transform: scaleX(1); }
	}

	h1, h2, h3, h4, h5, h6 {
		font-family: 'Poppins', sans-serif;
		color: var(--neutral-800);
		line-height: 1.3;
		font-weight: 600;
		margin-bottom: var(--spacing-md);
	}

	h1 { 
		font-size: 2.75rem;
		letter-spacing: -0.02em;
	}
	h2 { 
		font-size: 2.25rem;
		letter-spacing: -0.01em;
	}
	h3 { 
		font-size: 1.75rem;
	}
	h4 { 
		font-size: 1.5rem;
	}

	p {
		margin-bottom: var(--spacing-md);
	}

	.btn {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		padding: 0.75rem 1.5rem;
		border-radius: 0.5rem;
		font-weight: 600;
		text-decoration: none;
		transition: all 0.2s ease;
		cursor: pointer;
		border: none;
		font-size: 1rem;
		gap: 0.5rem;
	}

	.btn-primary {
		background: var(--primary);
		color: white;
	}

	.btn-primary:hover {
		background: var(--primary-dark);
		transform: translateY(-2px);
		box-shadow: var(--shadow-md);
	}

	.btn-secondary {
		background: var(--secondary);
		color: white;
	}

	.btn-secondary:hover {
		background: var(--secondary-dark);
		transform: translateY(-2px);
		box-shadow: var(--shadow-md);
	}

	.btn-outline {
		background: transparent;
		border: 2px solid var(--primary);
		color: var(--primary);
	}

	.btn-outline:hover {
		background: var(--primary);
		color: white;
		transform: translateY(-2px);
		box-shadow: var(--shadow-md);
	}

	.container {
		max-width: 1280px;
		margin: 0 auto;
		padding: 0 var(--spacing-lg);
		width: 100%;
	}

	.section {
		padding: var(--spacing-3xl) 0;
	}

	.card {
		background: white;
		border-radius: 1rem;
		padding: var(--spacing-xl);
		box-shadow: var(--shadow-sm);
		transition: all 0.3s ease;
	}

	.card:hover {
		box-shadow: var(--shadow-lg);
		transform: translateY(-4px);
	}

	/* Mejoras de accesibilidad */
	:focus {
		outline: 2px solid var(--primary);
		outline-offset: 2px;
	}

	:focus:not(:focus-visible) {
		outline: none;
	}

	:focus-visible {
		outline: 2px solid var(--primary);
		outline-offset: 2px;
	}

	/* Mejoras responsive */
	@media (max-width: 768px) {
		html {
			font-size: 14px;
		}

		h1 { font-size: 2.25rem; }
		h2 { font-size: 1.875rem; }
		h3 { font-size: 1.5rem; }
		h4 { font-size: 1.25rem; }

		.section { 
			padding: var(--spacing-2xl) 0;
		}

		.container { 
			padding: 0 var(--spacing-md);
		}

		.card {
			padding: var(--spacing-lg);
		}
	}

	/* Animaciones suaves */
	.fade-in {
		animation: fadeIn 0.5s ease-in;
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(10px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>

<script>
	// Manejo de la barra de carga
	document.addEventListener('astro:page-load', () => {
		const loadingBar = document.querySelector('.loading-bar');
		loadingBar?.classList.add('loading');
		setTimeout(() => {
			loadingBar?.classList.remove('loading');
		}, 1000);
	});

	// Smooth scroll para anclas
	document.querySelectorAll('a[href^="#"]').forEach(anchor => {
		anchor.addEventListener('click', function (e) {
			e.preventDefault();
			const target = document.querySelector(this.getAttribute('href'));
			if (target) {
				target.scrollIntoView({
					behavior: 'smooth',
					block: 'start'
				});
			}
		});
	});

	// Intersection Observer para animaciones
	const observerOptions = {
		root: null,
		rootMargin: '0px',
		threshold: 0.1
	};

	const observer = new IntersectionObserver((entries) => {
		entries.forEach(entry => {
			if (entry.isIntersecting) {
				entry.target.classList.add('fade-in');
				observer.unobserve(entry.target);
			}
		});
	}, observerOptions);

	document.querySelectorAll('.animate-on-scroll').forEach((el) => observer.observe(el));
</script>